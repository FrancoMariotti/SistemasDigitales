$date
  Sun Jan 10 17:34:13 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module multnb_tb $end
$var reg 1 ! clk_tb $end
$var reg 5 " opa_tb[4:0] $end
$var reg 5 # opb_tb[4:0] $end
$var reg 10 $ result_tb[9:0] $end
$scope module dut $end
$var reg 5 % multiplicand[4:0] $end
$var reg 5 & multiplier[4:0] $end
$var reg 10 ' result[9:0] $end
$var reg 5 ( aux[4:0] $end
$comment a_aux is not handled $end
$comment b_aux is not handled $end
$comment salsum is not handled $end
$var reg 4 ) salco[0:3] $end
$scope module gen_multiplicador(0) $end
$scope module adder_inst $end
$var reg 5 * a_i[4:0] $end
$var reg 5 + b_i[4:0] $end
$var reg 1 , ci_i $end
$var reg 5 - s_o[4:0] $end
$var reg 1 . co_o $end
$var reg 6 / aux[5:0] $end
$scope module sumnbgen(0) $end
$scope module sum1b_inst $end
$var reg 1 0 a_i $end
$var reg 1 1 b_i $end
$var reg 1 2 ci_i $end
$var reg 1 3 s_o $end
$var reg 1 4 co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(1) $end
$scope module sum1b_inst $end
$var reg 1 5 a_i $end
$var reg 1 6 b_i $end
$var reg 1 7 ci_i $end
$var reg 1 8 s_o $end
$var reg 1 9 co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(2) $end
$scope module sum1b_inst $end
$var reg 1 : a_i $end
$var reg 1 ; b_i $end
$var reg 1 < ci_i $end
$var reg 1 = s_o $end
$var reg 1 > co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(3) $end
$scope module sum1b_inst $end
$var reg 1 ? a_i $end
$var reg 1 @ b_i $end
$var reg 1 A ci_i $end
$var reg 1 B s_o $end
$var reg 1 C co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(4) $end
$scope module sum1b_inst $end
$var reg 1 D a_i $end
$var reg 1 E b_i $end
$var reg 1 F ci_i $end
$var reg 1 G s_o $end
$var reg 1 H co_o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen_multiplicador(1) $end
$scope module adder_inst $end
$var reg 5 I a_i[4:0] $end
$var reg 5 J b_i[4:0] $end
$var reg 1 K ci_i $end
$var reg 5 L s_o[4:0] $end
$var reg 1 M co_o $end
$var reg 6 N aux[5:0] $end
$scope module sumnbgen(0) $end
$scope module sum1b_inst $end
$var reg 1 O a_i $end
$var reg 1 P b_i $end
$var reg 1 Q ci_i $end
$var reg 1 R s_o $end
$var reg 1 S co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(1) $end
$scope module sum1b_inst $end
$var reg 1 T a_i $end
$var reg 1 U b_i $end
$var reg 1 V ci_i $end
$var reg 1 W s_o $end
$var reg 1 X co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(2) $end
$scope module sum1b_inst $end
$var reg 1 Y a_i $end
$var reg 1 Z b_i $end
$var reg 1 [ ci_i $end
$var reg 1 \ s_o $end
$var reg 1 ] co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(3) $end
$scope module sum1b_inst $end
$var reg 1 ^ a_i $end
$var reg 1 _ b_i $end
$var reg 1 ` ci_i $end
$var reg 1 a s_o $end
$var reg 1 b co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(4) $end
$scope module sum1b_inst $end
$var reg 1 c a_i $end
$var reg 1 d b_i $end
$var reg 1 e ci_i $end
$var reg 1 f s_o $end
$var reg 1 g co_o $end
$upscope $end
$upscope $end
$upscope $end
$scope module multn_bit $end
$upscope $end
$upscope $end
$scope module gen_multiplicador(2) $end
$scope module adder_inst $end
$var reg 5 h a_i[4:0] $end
$var reg 5 i b_i[4:0] $end
$var reg 1 j ci_i $end
$var reg 5 k s_o[4:0] $end
$var reg 1 l co_o $end
$var reg 6 m aux[5:0] $end
$scope module sumnbgen(0) $end
$scope module sum1b_inst $end
$var reg 1 n a_i $end
$var reg 1 o b_i $end
$var reg 1 p ci_i $end
$var reg 1 q s_o $end
$var reg 1 r co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(1) $end
$scope module sum1b_inst $end
$var reg 1 s a_i $end
$var reg 1 t b_i $end
$var reg 1 u ci_i $end
$var reg 1 v s_o $end
$var reg 1 w co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(2) $end
$scope module sum1b_inst $end
$var reg 1 x a_i $end
$var reg 1 y b_i $end
$var reg 1 z ci_i $end
$var reg 1 { s_o $end
$var reg 1 | co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(3) $end
$scope module sum1b_inst $end
$var reg 1 } a_i $end
$var reg 1 !" b_i $end
$var reg 1 "" ci_i $end
$var reg 1 #" s_o $end
$var reg 1 $" co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(4) $end
$scope module sum1b_inst $end
$var reg 1 %" a_i $end
$var reg 1 &" b_i $end
$var reg 1 '" ci_i $end
$var reg 1 (" s_o $end
$var reg 1 )" co_o $end
$upscope $end
$upscope $end
$upscope $end
$scope module multn_bit $end
$upscope $end
$upscope $end
$scope module gen_multiplicador(3) $end
$scope module adder_inst $end
$var reg 5 *" a_i[4:0] $end
$var reg 5 +" b_i[4:0] $end
$var reg 1 ," ci_i $end
$var reg 5 -" s_o[4:0] $end
$var reg 1 ." co_o $end
$var reg 6 /" aux[5:0] $end
$scope module sumnbgen(0) $end
$scope module sum1b_inst $end
$var reg 1 0" a_i $end
$var reg 1 1" b_i $end
$var reg 1 2" ci_i $end
$var reg 1 3" s_o $end
$var reg 1 4" co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(1) $end
$scope module sum1b_inst $end
$var reg 1 5" a_i $end
$var reg 1 6" b_i $end
$var reg 1 7" ci_i $end
$var reg 1 8" s_o $end
$var reg 1 9" co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(2) $end
$scope module sum1b_inst $end
$var reg 1 :" a_i $end
$var reg 1 ;" b_i $end
$var reg 1 <" ci_i $end
$var reg 1 =" s_o $end
$var reg 1 >" co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(3) $end
$scope module sum1b_inst $end
$var reg 1 ?" a_i $end
$var reg 1 @" b_i $end
$var reg 1 A" ci_i $end
$var reg 1 B" s_o $end
$var reg 1 C" co_o $end
$upscope $end
$upscope $end
$scope module sumnbgen(4) $end
$scope module sum1b_inst $end
$var reg 1 D" a_i $end
$var reg 1 E" b_i $end
$var reg 1 F" ci_i $end
$var reg 1 G" s_o $end
$var reg 1 H" co_o $end
$upscope $end
$upscope $end
$upscope $end
$scope module multn_bit $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
b00011 "
b00010 #
b0000000110 $
b00011 %
b00010 &
b0000000110 '
b00000 (
b0000 )
b00000 *
b00011 +
0,
b00011 -
0.
b000000 /
00
11
02
13
04
05
16
07
18
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
b00001 I
b00000 J
0K
b00001 L
0M
b000000 N
1O
0P
0Q
1R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
b00000 h
b00000 i
0j
b00000 k
0l
b000000 m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
b00000 *"
b00000 +"
0,"
b00000 -"
0."
b000000 /"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
#10000000
1!
#20000000
0!
#30000000
1!
#40000000
0!
#50000000
1!
#60000000
0!
#70000000
1!
#80000000
0!
#90000000
1!
#100000000
0!
b00110 #
b0000010010 $
b00110 &
b0000010010 '
b00011 J
b00100 L
b000110 N
1P
0R
1S
1U
1V
0W
1X
1[
1\
b00010 h
b00010 k
0n
0q
1s
1v
b00001 *"
b00001 -"
10"
13"
#110000000
1!
#120000000
0!
#130000000
1!
#140000000
0!
#150000000
1!
#160000000
0!
#170000000
1!
#180000000
0!
#190000000
1!
#200000000
0!
#210000000
1!
#220000000
0!
#230000000
1!
#240000000
0!
#250000000
1!
#260000000
0!
#270000000
1!
#280000000
0!
#290000000
1!
#300000000
0!
b00011 #
b0000001001 $
b00011 &
b0000001001 '
b00011 (
b00001 *
b00100 -
b000110 /
10
03
14
17
08
19
1<
1=
b00010 I
b00000 J
b00010 L
b000000 N
0O
0P
0R
0S
1T
0U
0V
1W
0X
0[
0\
b00001 h
b00001 k
1n
1q
0s
0v
b00000 *"
b00000 -"
00"
03"
#310000000
1!
#320000000
0!
#330000000
1!
#340000000
0!
#350000000
1!
#360000000
0!
#370000000
1!
#380000000
0!
#390000000
1!
